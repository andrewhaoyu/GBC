{
    "collab_server" : "",
    "contents" : "##  Research goal is to analyze the association of GBC with Snp.\n##  We used package CGEN to do the analysis\n##  First step is to transform the bed data into tped data with plink\n##so that the package CGEN could read it\n##  ./plink bfile --GBC_final --recode --transpose --out GBC_final\n##  Second step is to split the tped file into 50 small tped file to increase\n##computation speed, we used linux command to do this\n##  split -l 14298 GBC_final.tped GBC_final\n##  use R to perform CGEN analysze\nrm(list=ls()) #clear the environment\n\n\n##  summary data analysis\n##  read the data in R and change affected status from case and control \n##to 1 and 0\nsamplesnp <- read.table(\"sampleSNPs.txt\",header=F)\nsamplesnp <- as.vector(samplesnp$V1)\ntotal <- as.vector(bim$V2)\nresult <- samplesnp%in% total\nsum(result)\nlibrary(ggplot2)\nsetwd(\"../data\")\npheno <- read.table(\"pheno_ev\",header=T,sep=\"\\t\")\nfam <- read.table(\"GBC_final.fam\")\nbim <- read.table(\"GBC_final.bim\")\n# idx <- sample(c(1:nrow(bim)),100)\n# bim_sample <- bim[idx,]\n# write.table(bim_sample,\"bim_sample.txt\")\npheno.new <- read.csv(\"pheno.csv\")\npheno$X <- NULL\npheno$affected_status.1 <- NULL\npheno$affected <- 0\npheno$affected[pheno$affected_status==\"Case\"] <- 1\npheno$familyID <- fam$V1\nidx <- pheno.new$id %in% fam$V2\npheno.new.c <- pheno.new[idx,]\npheno.new.c <- pheno.new.c[match(fam$V2,pheno.new.c$id),]\npheno$highrisk <- pheno.new.c$birth_place_in_high_risk_area\npheno$stoneyn <- pheno.new.c$stone_yn\nwrite.table(pheno,\"pheno.txt\",quote=F,row.names=F,sep=\"\\t\")\npheno_GCTA <- pheno[,c(28,1,27)]\npheno_GCTA_test <- pheno_GCTA\npheno_GCTA_test$affected <- rnorm(nrow(pheno_GCTA))\nwrite.table(pheno_GCTA_test,\"pheno_GCTA_test.txt\",sep=\" \",quote=F,row.names = F,col.names = F)\nwrite.table(pheno_GCTA,\"pheno_GCTA.txt\",sep=\" \",quote=F,row.names = F,col.names = F)\ncovar_GCTA <- data.frame(FamID=fam$V1,SampleID=fam$V2,\n                    gender=as.numeric(pheno.new.c$gender))\nqcovar_GCTA <- data.frame(FamID=fam$V1,SampleID=fam$V2,\n                         EV1=pheno$EV1,EV2=pheno$EV2,\n                         EV3=pheno$EV3,EV4=pheno$EV4,\n                         EV5=pheno$EV5,EV6=pheno$EV6,\n                         EV7=pheno$EV7,EV8=pheno$EV8,\n                         EV9=pheno$EV9,EV10=pheno$EV10)\nwrite.table(covar_GCTA,\"covar_GCTA.txt\",sep=\" \",quote=F,row.names=F,col.names=F)\nwrite.table(qcovar_GCTA,\"qcovar_GCTA.txt\",sep=\" \",quote=F,row.names = F,col.names = F)\n##  test correlation between afftected status and principle components\n##  found EV3+EV4+EV5+EV8+EV9 were significant correlated with affected status\nEV.pheno <- pheno[,17:26]\npheno.EV.cor <- apply(EV.pheno,2,function(x) {cor.test(pheno$affected,x)})\n\n\n\n## the code to run on cluster\n\nrm(list=ls()) \ncommanarg <- commandArgs(trailingOnly = TRUE)\ni1 <- as.numeric(commanarg[1])\n\n\nlibrary(ggplot2)\nlibrary(CGEN)\nlibrary(qqman)\nsetwd(\"../data\")\n##  build snp list for function GxE.scan\nsnp.list <- list()\nsnp.list$format <- \"tped\"\nfile.name <- paste0(\"GBC_final_a\",letters)\nfile.name <- c(file.name,paste0(\"GBC_final_b\",letters[1:24]))\nsnp.list$file <- file.name[i1]\n#snp.list$start.vec <- 1\n#snp.list$stop.vec <- 10\nsnp.list$subject.list <- \"GBC_final.tfam\"\n##  build phenotype list for function GxE.scan\nf = \"pheno.txt\"\npheno.list <- list(file=f, header=1, delimiter=\"\\t\", id.var=c(\"familyID\",\"ID\"), response.var=\"affected\") \npheno.list$file.type <- 3\npheno.list$main.vars <- ~age+gender+EV3+EV4+EV5+EV8+EV9\npheno.list$strata.var <- ~gender\n##  build op list for funciton GxE.scan\nop<- list()\nop$out.file <- paste0(\"GxEout_strat_gender\",i1)\n\nresult <- GxE.scan(snp.list,pheno.list,op)\n\n\n##  result analysze\n##  use GxE.scan.combine to combine all the 50 files together\nout.file <- \"../result/nov_2/all_output.txt\"\ndir <- \"../result/nov_2\"\nGxE.scan.combine(out.file,dir) \nresult <- read.table(\"../result/nov_2/all_output.txt\",header=T)\n##  rematch the snp order as bim file\n##  clean the 0 in chromosome\nresult2 <- result[match(bim$V2,result$SNP),]\nresult2$chromosome <- bim$V1\nresult2$chromosome[result2$chromosome==0] <- NA\nresult2$location <- bim$V4\nresult.UML <- result2[!is.na(result2$chromosome)&!is.na(result2$UML.Omnibus.Pvalue),]\n\n##build the UML, CML, EB three data frame for manhattan and qqplot\n\nUML.result <- data.frame(CHR = result.UML$chromosome,BP = result.UML$location, \n                         P = result.UML$UML.Omnibus.Pvalue,SNP =result.UML$SNP )\n\nmanhattan(UML.result,main=\"UML.result\",chr=\"CHR\",bp=\"BP\",p=\"P\",snp=\"SNP\")\nqq(UML.result$P,main=\"UML.result\")\nresult.CML <- result2[!is.na(result2$chromosome)&!is.na(result2$CML.Omnibus.Pvalue),]\nCML.result <- data.frame(CHR = result.CML$chromosome,BP = result.CML$location, \n                         P = result.CML$CML.Omnibus.Pvalue,SNP =result.CML$SNP )\n\nmanhattan(CML.result,main=\"CML.result\",chr=\"CHR\",bp=\"BP\",p=\"P\",snp=\"SNP\")\nqq(CML.result$P,main=\"CML.result\")\n\nresult.EB <- result2[!is.na(result2$chromosome)&!is.na(result2$EB.Omnibus.Pvalue),]\nEB.result <- data.frame(CHR = result.EB$chromosome,BP = result.EB$location, \n                         P = result.EB$CML.Omnibus.Pvalue,SNP =result.EB$SNP )\n\nmanhattan(EB.result,main=\"EB.result\",chr=\"CHR\",bp=\"BP\",p=\"P\",snp=\"SNP\")\nqq(CML.result$P,main=\"EB.result\")\n\n\n\n##  my question\n##  1.some snp freq is 0\n##  2.the chromosome question\n##  3.which variable should be called strata.var andwhich should be \n##called int.var\n## Sharayu's question double check\n\n\n\n\n\n\n\ncovar <- data.frame(FamID=fam$V1,SampleID=fam$V2,age=pheno.new.c$age,\n                    gender=as.numeric(pheno.new.c$gender),\n                    highriskarea=pheno.new.c$birth_place_in_high_risk_area,\n                    stoneyn=pheno.new.c$stone_yn,\n                    EV3=pheno$EV3,EV4=pheno$EV4,EV5=pheno$EV5,\n                    EV8=pheno$EV8,EV9=pheno$EV9)\n\nwrite.table(covar,\"covar.txt\",sep=\" \",quote=F,row.names=F,col.names=F)\nfreq <- read.table(\"GBC_final.frq\",header=T)\n\n\n\n\n\n\nout.file <- \"../result/nov_4/all_output_strat_highrisk.txt\"\ndir <- \"../result/nov_4\"\npattern <- \"GxEout_strat_highrisk\"\nGxE.scan.combine(out.file,dir) \nresult <- read.table(\"../result/nov_4/all_output_strat_highrisk.txt\",header=T,fill=T)\n##  rematch the snp order as bim file\n##  clean the 0 in chromosome\nresult2 <- result[match(bim$V2,result$SNP),]\nresult2$chromosome <- bim$V1\nresult2$chromosome[result2$chromosome==0] <- NA\nresult2$location <- bim$V4\nresult.UML <- result2[!is.na(result2$chromosome)&!is.na(result2$UML.Omnibus.Pvalue),]\n\n##build the UML, CML, EB three data frame for manhattan and qqplot\n\nUML.result <- data.frame(CHR = result.UML$chromosome,BP = result.UML$location, \n                         P = result.UML$UML.Omnibus.Pvalue,SNP =result.UML$SNP )\n# pdf(\"UMLGWAS.pdf\",width=8,height=6, compress = TRUE)\npng(\"../result/nov_4/UMLGWAS.png\",width=8,height=6, \n    units = \"in\", res = 600)\nmanhattan(UML.result,main=\"UML.result\",chr=\"CHR\",bp=\"BP\",p=\"P\",snp=\"SNP\")\ndev.off()\npng(\"../result/nov_4/UMLQQ.png\",width=8,height=6,units=\"in\",res=600)\nqq(UML.result$P,main=\"UML.result\")\ndev.off()\nresult.CML <- result2[!is.na(result2$chromosome)&!is.na(result2$CML.Omnibus.Pvalue),]\nCML.result <- data.frame(CHR = result.CML$chromosome,BP = result.CML$location, \n                         P = result.CML$CML.Omnibus.Pvalue,SNP =result.CML$SNP )\npng(\"../result/nov_4/CMLGWAS.png\",width=8,height=6,units=\"in\",res=600)\nmanhattan(CML.result,main=\"CML.result\",chr=\"CHR\",bp=\"BP\",p=\"P\",snp=\"SNP\")\ndev.off()\npng(\"../result/nov_4/CMLQQ.png\",width=8,height=6,units=\"in\",res=600)\nqq(CML.result$P,main=\"CML.result\")\ndev.off()\nresult.EB <- result2[!is.na(result2$chromosome)&!is.na(result2$EB.Omnibus.Pvalue),]\nEB.result <- data.frame(CHR = result.EB$chromosome,BP = result.EB$location, \n                        P = result.EB$CML.Omnibus.Pvalue,SNP =result.EB$SNP )\npng(\"../result/nov_4/EBGWAS.png\",width=8,height=6,units=\"in\",res=600)\nmanhattan(EB.result,main=\"EB.result\",chr=\"CHR\",bp=\"BP\",p=\"P\",snp=\"SNP\")\ndev.off()\npng(\"../result/nov_4/EBQQ.png\",width=8,height=6,units=\"in\",res=600)\nqq(EB.result$P,main=\"EB.result\")\ndev.off()\n\n\n\n\n\n\n##\nout.file <- \"../result/nov_9/all_output_strat_gender.txt\"\ndir <- \"../result/nov_9\"\npattern <- \"GxEout_strat_gender\"\nGxE.scan.combine(out.file,dir) \nresult <- read.table(\"../result/nov_9/all_output_strat_gender.txt\",header=T,fill=T)\n##  rematch the snp order as bim file\n##  clean the 0 in chromosome\nresult2 <- result[match(bim$V2,result$SNP),]\nresult2$chromosome <- bim$V1\nresult2$chromosome[result2$chromosome==0] <- NA\nresult2$location <- bim$V4\nresult.UML <- result2[!is.na(result2$chromosome)&!is.na(result2$UML.Omnibus.Pvalue),]\n\n##build the UML, CML, EB three data frame for manhattan and qqplot\n\nUML.result <- data.frame(CHR = result.UML$chromosome,BP = result.UML$location, \n                         P = result.UML$UML.Omnibus.Pvalue,SNP =result.UML$SNP )\n# pdf(\"UMLGWAS.pdf\",width=8,height=6, compress = TRUE)\npng(\"../result/nov_9/UMLGWAS.png\",width=8,height=6, \n    units = \"in\", res = 600)\nmanhattan(UML.result,main=\"UML.result\",chr=\"CHR\",bp=\"BP\",p=\"P\",snp=\"SNP\")\ndev.off()\npng(\"../result/nov_9/UMLQQ.png\",width=8,height=6,units=\"in\",res=600)\nqq(UML.result$P,main=\"UML.result\")\ndev.off()\nresult.CML <- result2[!is.na(result2$chromosome)&!is.na(result2$CML.Omnibus.Pvalue),]\nCML.result <- data.frame(CHR = result.CML$chromosome,BP = result.CML$location, \n                         P = result.CML$CML.Omnibus.Pvalue,SNP =result.CML$SNP )\npng(\"../result/nov_9/CMLGWAS.png\",width=8,height=6,units=\"in\",res=600)\nmanhattan(CML.result,main=\"CML.result\",chr=\"CHR\",bp=\"BP\",p=\"P\",snp=\"SNP\")\ndev.off()\npng(\"../result/nov_9/CMLQQ.png\",width=8,height=6,units=\"in\",res=600)\nqq(CML.result$P,main=\"CML.result\")\ndev.off()\nresult.EB <- result2[!is.na(result2$chromosome)&!is.na(result2$EB.Omnibus.Pvalue),]\nEB.result <- data.frame(CHR = result.EB$chromosome,BP = result.EB$location, \n                        P = result.EB$CML.Omnibus.Pvalue,SNP =result.EB$SNP )\npng(\"../result/nov_9/EBGWAS.png\",width=8,height=6,units=\"in\",res=600)\nmanhattan(EB.result,main=\"EB.result\",chr=\"CHR\",bp=\"BP\",p=\"P\",snp=\"SNP\")\ndev.off()\npng(\"../result/nov_9/EBQQ.png\",width=8,height=6,units=\"in\",res=600)\nqq(EB.result$P,main=\"EB.result\")\ndev.off()\n\n\n\ncondition <- read.csv(\"../conditional analysis/condition/Sheet1_Table_1.csv\")\ncondition.add <- condition[seq(1,nrow(condition),2),]\ncondition.con <- condition[seq(2,nrow(condition),2),]\nwrite.table(condition.add$SNP,\"snplist.txt\",quote=F,col.names=F,row.names=F)\n\n\n\n\n\n\n##conditional analysis\nbim <- read.table(\"GBC_final.bim\")\ncolnames(bim) <- c(\"chrom\",\"snp\",\"bp\",\"ds\",\"alle1\",\"alle2\")\n\nfreq <- read.table(\"GBC_freq.frq\",header=T)\n\n\nlibrary(dplyr)\ntopsnplist <- read.table(\"topsnplist\",header=F)\ncolnames(topsnplist) <- \"snp\"\nbim.top <- merge(topsnplist,bim,by.x=\"snp\",sort=F)\nfreq.top <- merge(topsnplist,freq,by.x=\"snp\",by.y=\"SNP\",sort=F)\nsnpdata <- read.table(\"topsnp.raw\",header=T)\n\npheno_new <- read.table(\"pheno_SNPtest.txt\",header=T)\n\ncovar <- pheno_new[2:11]\ncovar_GCTA <- cbind(covar_GCTA,pheno_new$agegroup_18_29,pheno_new$agegroup_30_39,pheno_new$agegroup_40_49,pheno_new$agegroup_60)\nwrite.table(covar_GCTA,\"covar_GCTA.txt\",quote = F,row.names = F,col.names = F)\n\nidx_female = which(fam$V5==2)\ncovar_GCTA_female = covar_GCTA[idx_female,]\ncovar_GCTA_female = covar_GCTA_female[,-3]\nqcovar_GCTA_female = qcovar_GCTA[idx_female,]\nlist_female = fam[idx_female,1:2]\npheno_GCTA_female = pheno_GCTA[idx_female,]\n\nwrite.table(covar_GCTA_female,file=\"/Users/haoyuzhang/Dropbox/project/Nilanjan/Gallballadar_Cancer/code/heritability_analysis/covar_GCTA_female.txt\",col.names = F,quote=F,row.names = F)\nwrite.table(qcovar_GCTA_female,file=\"/Users/haoyuzhang/Dropbox/project/Nilanjan/Gallballadar_Cancer/code/heritability_analysis/qcovar_GCTA_female.txt\",col.names = F,quote=F,row.names = F)\nwrite.table(list_female,file=\"/Users/haoyuzhang/Dropbox/project/Nilanjan/Gallballadar_Cancer/code/heritability_analysis/list_female.txt\",col.names = F,quote=F,row.names = F)\nwrite.table(pheno_GCTA_female,file=\"/Users/haoyuzhang/Dropbox/project/Nilanjan/Gallballadar_Cancer/code/heritability_analysis/pheno_GCTA_female.txt\",col.names = F,quote=F,row.names = F)\n\n\n\n\n\ntopsnp <- snpdata[,11]\nconditional_snp <- snpdata[,27]\ntopsnp.new <- topsnp\ntopsnp.new[topsnp==0] <-2\ntopsnp.new[topsnp==2] <- 0\ntopsnp <- topsnp.new\nx <- conditional_snp\nx.new <- x\nx.new[x==2] <- 0\nx.new[x==0] <- 2\nx <- x.new\nconditional_snp <- x\nmodel <- glm(pheno_new$affected_status_Case~covar$agegroup_18_29+covar$agegroup_30_39+\n               covar$agegroup_40_49+covar$agegroup_60+covar$gender_F+covar$EV3+\n               covar$EV4+covar$EV5+covar$EV8+covar$EV9+topsnp,family=binomial)\nresult <- summary(model)\nplaces=2\nlog.or <- result$coefficients[2,1]\nsd <- result$coefficients[2,2]\nlog.or.low <- -1.96*sd+log.or\nlog.or.high <- 1.96*sd+log.or\np <- result$coefficients[2,4]\nlog.or.top <- result$coefficients[13,1]\nsd.top <- result$coefficients[13,2]\nlog.or.low.top <- -1.96*sd.top+log.or.top\nlog.or.high.top <- 1.96*sd.top+log.or.top\np.top <- result$coefficients[13,4]\nr2 <- round(cor(x,topsnp,use=\"complete.obs\")^2,3)\ntemp <- cbind(x,topsnp,pheno_new$affected_status_Case)\ntemp <- temp[complete.cases(temp),]\ncontrol.case <- table(temp[,3])\nor <- round(exp(log.or),places)\nor.low <- round(exp(log.or.low),places)\nor.high <- round(exp(log.or.high),places)\nor.top <- round(exp(log.or.top),places)\nor.low.top <- round(exp(log.or.low.top),places)\nor.high.top <- round(exp(log.or.high.top),places) \ncov.log.or <- vcov(model)[c(2,13),c(2,13)]\n\nreplication <- read.csv(\"replication_data.csv\",na.strings = \"\")\nreplication <- replication[,c(1,12,14,26:31)]\n###exclude age with missing value\nreplication <- replication[c(-322,-325,-344),]\nreplication <- replication[complete.cases(replication),]\n\ntopsnp.r <- replication[,2]\ntopsnp.r.new <- rep(0,length(topsnp.r))\ntopsnp.r.new[topsnp.r==\"CT\"] <- 1\ntopsnp.r.new[topsnp.r==\"TT\"] <- 2\ntopsnp.r <- topsnp.r.new\n\nconditionalsnp.r <- replication[,3]\nconditionalsnp.r.new <- rep(0,length(topsnp.r))\nconditionalsnp.r.new[conditionalsnp.r==\"CT\"] <- 1\nconditionalsnp.r.new[conditionalsnp.r==\"TT\"] <- 2\nconditionalsnp.r <- conditionalsnp.r.new\nage.r <- replication[,8]\nage.r.category <- as.factor(cut(age.r,c(17,29,39,49,60,100),labels = F))\nage.group <- model.matrix(~age.r.category-1)\nage.group <- age.group[,-5]\nmodel.r <- glm(replication$gb~conditionalsnp.r+age.group+replication$sex+topsnp.r,family = binomial)\nresult.r <- summary(model.r)\nplaces=2\nlog.or.r <- result.r$coefficients[2,1]\nsd.r <- result.r$coefficients[2,2]\nlog.or.low.r <- -1.96*sd.r+log.or.r\nlog.or.high.r <- 1.96*sd.r+log.or.r\np.r <- result.r$coefficients[2,4]\nlog.or.top.r <- result.r$coefficients[8,1]\nsd.top.r <- result.r$coefficients[8,2]\nlog.or.low.top.r <- -1.96*sd.top.r+log.or.top.r\nlog.or.high.top.r <- 1.96*sd.top.r+log.or.top.r\np.top.r <- result.r$coefficients[8,4]\n\n\nor.r <- round(exp(log.or.r),places)\nor.low.r <- round(exp(log.or.low.r),places)\nor.high.r <- round(exp(log.or.high.r),places)\nor.top.r <- round(exp(log.or.top.r),places)\nor.low.top.r <- round(exp(log.or.low.top.r),places)\nor.high.top.r <- round(exp(log.or.high.top.r),places) \ncov.log.or.r <- vcov(model.r)[c(2,8),c(2,8)]\n\nbeta.dis <- c(log.or,log.or.top)\nbeta.r <- c(log.or.r,log.or.top.r)\nW.dis <- solve(cov.log.or)\nW.r <- solve(cov.log.or.r)\nbeta.meta <- solve((W.dis+W.r),(W.dis%*%beta.dis+W.r%*%beta.r))\ncov.meta <- solve(W.dis+W.r)\nlog.or.meta <- beta.meta[1,1]\nsd.or.meta <- sqrt(cov.meta[1,1])\np.meta <- 2*(1-pnorm(log.or.meta/sd.or.meta))\nlog.or.low.meta <- log.or.meta-1.96*sd.or.meta\nlog.or.high.meta <- log.or.meta+1.96*sd.or.meta\nor.meta <- exp(log.or.meta)\nor.high.meta <- exp(log.or.high.meta)\nor.low.meta <- exp(log.or.low.meta)\nlog.or.top.meta <- beta.meta[2,1]\nsd.or.top.meta <- sqrt(cov.meta[2,2])\np.top.meta <- 2*(1-pnorm(log.or.top.meta/sd.or.top.meta))\nor.top.meta <- exp(log.or.top.meta)\nlog.or.low.top.meta <- log.or.top.meta-1.96*sd.or.top.meta\nlog.or.high.top.meta <- log.or.top.meta+1.96*sd.or.top.meta\nor.top.meta <- exp(log.or.top.meta)\nor.high.top.meta <- exp(log.or.high.top.meta)\nor.low.top.meta <- exp(log.or.low.top.meta)\n\n\nfinal.table <- data.frame(conditionalsnp.or=c(or,or.r,or.meta),\n                          conditionalsnp.or.low = c(or.low,or.low.r,or.low.meta),\n                          conditionalsnp.or.high = c(or.high,or.high.r,or.high.meta),\n                          conditionalsnp.p = c(p,p.r,p.meta),\n                          topsnp.or = c(or.top,or.top.r,or.top.meta),\n                          topsnp.or.low = c(or.low.top,or.low.top.r,or.low.top.meta),\n                          topsnp.or.high = c(or.high.top,or.high.top.r,or.high.top.meta),\n                          topsnp.p = c(p.top,p.top.r,p.top.meta)\n                          )\nrownames(final.table) <- c(\"discovery\",\"replicates\",\"meta\")\n\n\n\n\n\n\n\ntopsnp.new <- topsnp\ntopsnp.new[topsnp==0] <-2\ntopsnp.new[topsnp==2] <- 0\ntopsnp <- topsnp.new\nsnpdata <- snpdata[,-12]\nsnpdata <- snpdata[,-11]\n\nconditionsnp <- function(x){\n# x.new <- x\n# x.new[x==2] <- 0\n# x.new[x==0] <- 2\n# x <- x.new\nmodel <- glm(pheno_new$affected_status_Case~x+covar$agegroup_18_29+covar$agegroup_30_39+\n               covar$agegroup_40_49+covar$agegroup_60+covar$gender_F+covar$EV3+\n               covar$EV4+covar$EV5+covar$EV8+covar$EV9+topsnp,family=binomial)\nresult <- summary(model)\nplaces=2\nlog.or <- result$coefficients[2,1]\nsd <- result$coefficients[2,2]\nlog.or.low <- -1.96*sd+log.or\nlog.or.high <- 1.96*sd+log.or\np <- result$coefficients[2,4]\nlog.or.top <- result$coefficients[13,1]\nsd.top <- result$coefficients[13,2]\nlog.or.low.top <- -1.96*sd.top+log.or.top\nlog.or.high.top <- 1.96*sd.top+log.or.top\np.top <- result$coefficients[13,4]\nr2 <- round(cor(x,topsnp,use=\"complete.obs\")^2,3)\ntemp <- cbind(x,topsnp,pheno_new$affected_status_Case)\ntemp <- temp[complete.cases(temp),]\ncontrol.case <- table(temp[,3])\nor <- round(exp(log.or),places)\nor.low <- round(exp(log.or.low),places)\nor.high <- round(exp(log.or.high),places)\nor.top <- round(exp(log.or.top),places)\nor.low.top <- round(exp(log.or.low.top),places)\nor.high.top <- round(exp(log.or.high.top),places) \nreturn(\n  c(control.case[1],control.case[2],r2,\n    paste0(or,\"(\",or.low,\"-\",\n    or.high,\")\"),\n    p,\n    paste0(or.top,\"(\",or.low.top,\n             \"-\",or.high.top,\")\"),\n    p.top\n        )\n       )\n}\ncondition.result <- apply(snpdata[,7:25],2,conditionsnp)\n\n\nnames <- colnames(condition.result)\nnames <- gsub(\"_.*\",\"\",names)\ncondition.result <- t(condition.result)\ncolnames(condition.result) <- c(\"control\",\"cases\",\"R2\",\"OR\",\"P-value\",\"P-value for top\",\"OR for top\")\ncondition.result <- as.data.frame(condition.result)\ncondition.result$snp <- names\ncondition.result <- merge(topsnplist,condition.result,by=\"snp\",all.x = T,all.y = T\n                          ,sort = F)\nwrite.csv(condition.result,\"condition.result.csv\",col.names =T,quote=F,row.names=F)\n\n\n\n\n\n\n#### 2.df association test\nlibrary(lmtest)\ntopsnplist <- read.table(\"topsnplist\",header=F)\ncolnames(topsnplist) <- \"snp\"\nsnpdata <- read.table(\"topsnp.raw\",header=T)\npheno_new <- read.table(\"pheno_SNPtest.txt\",header=T)\nreplicates <- read.csv(\"replication_data2.csv\")\ncovar <- pheno_new[2:11]\n\nx <- snpdata[,27]\ndftest2 <- function(x){\n \n  homo <- rep(0,length(x))\n  homo[x==0] <- 1\n  heter <- rep(0,length(x))\n  heter[x==1] <- 1\n  model2 <- glm(pheno_new$affected_status_Case~homo+heter+covar$agegroup_18_29 +covar$agegroup_30_39+\n                  covar$agegroup_40_49+covar$agegroup_60+covar$gender_F+covar$EV3+\n                  covar$EV4+covar$EV5+covar$EV8+covar$EV9,family=binomial)\n  result2 <- summary(model2)\n  model3 <- glm(pheno_new$affected_status_Case~covar$agegroup_18_29 +covar$agegroup_30_39+\n                  covar$agegroup_40_49+covar$agegroup_60+covar$gender_F+covar$EV3+\n                  covar$EV4+covar$EV5+covar$EV8+covar$EV9,family=binomial)\n  result3 <- lrtest(model2,model3)\n  log.or.homo <- result2$coefficients[2,1]\n  sd.or.homo <- result2$coefficients[2,2]\n  log.or.homo.low <- log.or.homo -1.96*sd.or.homo\n  log.or.homo.high <- log.or.homo +1.96*sd.or.homo\n \n  log.or.heter <- result2$coefficients[3,1]\n  sd.or.heter <- result2$coefficients[3,2]\n  log.or.heter.low <- log.or.heter -1.96*sd.or.heter\n  log.or.heter.high <- log.or.heter +1.96*sd.or.heter\n  p <- format(result3$`Pr(>Chisq)`[2],digits=3,scientific = T)\n  places <- 2\n  or.homo <- round(exp(log.or.homo),places)\n  or.homo.low <- round(exp(log.or.homo.low),places)\n  or.homo.high <- round(exp(log.or.homo.high),places)\n  or.heter <- round(exp(log.or.heter),places)\n  or.heter.low <- round(exp(log.or.heter.low),places)\n  or.heter.high <- round(exp(log.or.heter.high),places)\n  return(c(\n    paste0(or.homo,\"(\",or.homo.low,\"-\",or.homo.high,\")\"),\n    paste0(or.heter,\"(\",or.heter.low,\"-\",or.heter.high,\")\"),\n    p\n  )\n  )\n \n \n  }\n \n\n\nassociation.test.2df <- apply(snpdata[,7:27],2,dftest2)\n\n\nnames <- colnames(association.test.2df)\nnames <- gsub(\"_.*\",\"\",names)\nassociation.test.2df <- t(association.test.2df)\ncolnames(association.test.2df) <- c(\"or.homo\",\"or.heter\",\"p\")\nassociation.test.2df <- as.data.frame(association.test.2df)\nassociation.test.2df$snp <- names\nassociation.test.2df <- merge(topsnplist,association.test.2df,by=\"snp\",all.x = T,all.y = T,sort = F)\n\nwrite.csv(association.test.2df,\"association.test.2df.csv\",col.names =T,quote=F,row.names=F)\n\n###dominant analysis\nlibrary(lmtest)\ntopsnplist <- read.table(\"topsnplist\",header=F)\ncolnames(topsnplist) <- \"snp\"\nsnpdata <- read.table(\"topsnp.raw\",header=T)\npheno_new <- read.table(\"pheno_SNPtest.txt\",header=T)\n\ncovar <- pheno_new[2:11]\n\nx <- snpdata[,27]\ndominant <- function(x){\n  x.new <- x\n  x.new[x==0] <- 1\n  x.new[x==1] <- 1\n  x.new[x==2] <- 0\n  x <- x.new\n  model2 <- glm(pheno_new$affected_status_Case~x+covar$agegroup_18_29 +covar$agegroup_30_39+\n                  covar$agegroup_40_49+covar$agegroup_60+covar$gender_F+covar$EV3+\n                  covar$EV4+covar$EV5+covar$EV8+covar$EV9,family=binomial)\n  result2 <- summary(model2)\n  \n  log.or <- result2$coefficients[2,1]\n  sd.or<- result2$coefficients[2,2]\n  log.or.low <- log.or -1.96*sd.or\n  log.or.high <- log.or +1.96*sd.or\n  p <- result2$coefficients[2,4]\n  \n  \n  places <- 2\n  or <- round(exp(log.or),places)\n  or.low <- round(exp(log.or.low),places)\n  or.high <- round(exp(log.or.high),places)\n  \n  return(c(\n    paste0(or,\"(\",or.low,\"-\",or.high,\")\"),\n    p\n  )\n  )\n  \n  \n}\n\n\n\n\nassociation.test.2df <- apply(snpdata[,7:27],2,dftest2)\n\n\nnames <- colnames(association.test.2df)\nnames <- gsub(\"_.*\",\"\",names)\nassociation.test.2df <- t(association.test.2df)\ncolnames(association.test.2df) <- c(\"or.homo\",\"or.heter\",\"p\")\nassociation.test.2df <- as.data.frame(association.test.2df)\nassociation.test.2df$snp <- names\nassociation.test.2df <- merge(topsnplist,association.test.2df,by=\"snp\",all.x = T,all.y = T,sort = F)\n\nwrite.csv(association.test.2df,\"association.test.2df.csv\",col.names =T,quote=F,row.names=F)\n\n###heter and homo/heter\nlibrary(lmtest)\ntopsnplist <- read.table(\"topsnplist\",header=F)\ncolnames(topsnplist) <- \"snp\"\nsnpdata <- read.table(\"topsnp.raw\",header=T)\npheno_new <- read.table(\"pheno_SNPtest.txt\",header=T)\n\ncovar <- pheno_new[2:11]\n\nx <- snpdata[,27]\nhomo.heter <- function(x){\n  \n  homo <- rep(0,length(x))\n  homo[x==0] <- 1\n  heter <- rep(0,length(x))\n  heter[x==1] <- 1\n  model2 <- glm(pheno_new$affected_status_Case~homo+heter+covar$agegroup_18_29 +covar$agegroup_30_39+\n                  covar$agegroup_40_49+covar$agegroup_60+covar$gender_F+covar$EV3+\n                  covar$EV4+covar$EV5+covar$EV8+covar$EV9,family=binomial)\n  result2 <- summary(model2)\n  log.or.homo.cov <- result2$cov.unscaled[2,2]\n  log.or.heter.cov <- result2$cov.unscaled[3,3]\n  log.or.homo.heter.cov <- result2$cov.unscaled[2,3]\n  log.or.homoheter.cov <- log.or.homo.cov+log.or.heter.cov-2*log.or.homo.heter.cov\n  log.or.homo <- result2$coefficients[2,1]\n  sd.or.homo <- result2$coefficients[2,2]\n  log.or.homo.low <- log.or.homo -1.96*sd.or.homo\n  log.or.homo.high <- log.or.homo +1.96*sd.or.homo\n  \n  log.or.heter <- result2$coefficients[3,1]\n  sd.or.heter <- result2$coefficients[3,2]\n  log.or.heter.low <- log.or.heter -1.96*sd.or.heter\n  log.or.heter.high <- log.or.heter +1.96*sd.or.heter\n log.or.homoheter <- log.or.homo-log.or.heter\n log.or.homoheter.sd <- sqrt(log.or.homoheter.cov)\n log.or.homoheter.low <- log.or.homoheter -1.96*log.or.homoheter.sd\n log.or.homoheter.high <- log.or.homoheter+1.96*log.or.homoheter.sd\n  places <- 2\n  or.homoheter <- round(exp(log.or.homoheter),places)\n  or.homoheter.low <- round(exp(log.or.homoheter.low),places)\n  or.homoheter.high <- round(exp(log.or.homoheter.high),places)\n  or.heter <- round(exp(log.or.heter),places)\n  or.heter.low <- round(exp(log.or.heter.low),places)\n  or.heter.high <- round(exp(log.or.heter.high),places)\n  return(c(\n    paste0(or.homoheter,\"(\",or.homoheter.low,\"-\",or.homoheter.high,\")\"),\n    paste0(or.heter,\"(\",or.heter.low,\"-\",or.heter.high,\")\")\n  )\n  )\n  \n  \n}\n\n\n\nhomo.heter.result <- apply(snpdata[,7:27],2,homo.heter)\n\n\nnames <- colnames(homo.heter.result)\nnames <- gsub(\"_.*\",\"\",names)\nhomo.heter.result <- t(homo.heter.result)\ncolnames(homo.heter.result) <- c(\"or.homo/heter\",\"or.heter\")\nhomo.heter.result <- as.data.frame(homo.heter.result)\nhomo.heter.result$snp <- names\nhomo.heter.result <- merge(topsnplist,homo.heter.result,by=\"snp\",all.x = T,all.y = T,sort = F)\n\nwrite.csv(homo.heter.result,\"homo.heter.result.csv\",col.names =T,quote=F,row.names=F)\n\n\n\n####marginal analysis\nlibrary(lmtest)\ntopsnplist <- read.table(\"topsnplist\",header=F)\ncolnames(topsnplist) <- \"snp\"\nsnpdata <- read.table(\"topsnp.raw\",header=T)\npheno_new <- read.table(\"pheno_SNPtest.txt\",header=T)\n\ncovar <- pheno_new[2:11]\nx <- snpdata[,27]\nmarginal <- function(x){\n  \n#x[x==2] <- 0\n#x[x==0] <- 2\n  model2 <- glm(pheno_new$affected_status_Case~x+covar$agegroup_18_29 +covar$agegroup_30_39+\n                  covar$agegroup_40_49+covar$agegroup_60+covar$gender_F+covar$EV3+\n                  covar$EV4+covar$EV5+covar$EV8+covar$EV9,family=binomial)\n  result2 <- summary(model2)\n \n  log.or <- result2$coefficients[2,1]\n  sd.or<- result2$coefficients[2,2]\n  log.or.low <- log.or -1.96*sd.or\n  log.or.high <- log.or +1.96*sd.or\n  p <- result2$coefficients[2,4]\n\n \n  places <- 2\n  or <- round(exp(log.or),places)\n  or.low <- round(exp(log.or.low),places)\n  or.high <- round(exp(log.or.high),places)\n \n  return(c(\n    paste0(or,\"(\",or.low,\"-\",or.high,\")\"),\n    p\n  )\n  )\n  \n  \n}\n\n\n\nmarginal <- apply(snpdata[,7:27],2,marginal)\n\n\nnames <- colnames(marginal)\nnames <- gsub(\"_.*\",\"\",names)\nmarginal <- t(marginal)\ncolnames(marginal) <- c(\"or\",\"p\")\nmarginal <- as.data.frame(marginal)\nmarginal$snp <- names\nmarginal <- merge(topsnplist,marginal,by=\"snp\",all.x = T,all.y = T,sort = F)\n\n\n####test snp\n\nsnpdata <- read.table(\"topsnp.raw\",header=T)\nidx <- which(pheno$affected==1)\npheno.case <- pheno[idx,]\nsnp.case <- snpdata[idx,]\n\ngallstonecase <- function(pheno,snp){\n  model1 <- glm(pheno$stoneyn~snp+pheno$age+pheno$gender+pheno$EV3+\n                  pheno$EV4+pheno$EV5+\n                  pheno$EV8+pheno$EV9,family=binomial())\n  result <- summary(model1)\n  estimate <- result$coefficients[2,1]\n  std <- result$coefficients[2,2]\n  odds <- exp(estimate)\n  CI_lowerbound <- exp(estimate-1.96*std)\n  CI_upperbound <- exp(estimate+1.96*std)\n  p <- result$coefficients[2,4]\n  return(list(P = p,oddsratio = odds, CI_lowerbound = CI_lowerbound,\n                    CI_upperbound = CI_upperbound))\n}\n\ncaseonly <- data.frame(snp=colnames(snpdata)[7:26],\n                       P=apply(snp.case[7:26], 2, \n                               function(x){gallstonecase(pheno.case,x)[[1]]}),\n                       oddsratio=apply(snp.case[7:26], \n                                       2, function(x){gallstonecase(pheno.case,x)[[2]]}),\n                       CI_lowerbound=apply(snp.case[7:26], 2, \n                                           function(x){gallstonecase(pheno.case,x)[[3]]}),\n                       CI_upperbound = apply(snp.case[7:26], 2, \n                                             function(x){gallstonecase(pheno.case,x)[[4]]}))\n\ntopsnp.order <- read.table(\"topsnporder.txt\",header=F)\nwrite.csv(caseonly,\"caseonly.csv\",quote=F,row.names=F,col.names=T)\n\nrisklogistic<- function(pheno,snp,risk){\n  idx <- which(pheno$highrisk==risk)\n  testpheno <- pheno[idx,]\n  model1 <- glm(pheno[idx,]$affected~snp[idx]+pheno[idx,]$age+\n                  pheno[idx,]$gender+\n                  pheno[idx,]$EV3+pheno[idx,]$EV4+pheno[idx,]$EV5+\n                  pheno[idx,]$EV8+pheno[idx,]$EV9,family = binomial())\nreturn(-log10(summary(model1)$coefficients[2,4]))\n}\n\n\nhighrisk <- data.frame(snp=colnames(snpdata)[7:26],\n                       high=apply(snpdata[7:26], 2, function(x){risklogistic(pheno,x,1)}),\n                       low=apply(snpdata[7:26], 2, function(x){risklogistic(pheno,x,0)}))\n\ncolnames(highrisk) <- c(\"snp\",\"-log10(P) high risk area\",\"-log10(P) low risk area\")\n\n\nwrite.csv(highrisk,\"../result/highriskarea_\n          _analysis.csv\",quote=F,row.names = F)\n\n\n\ngenderlogistic<- function(pheno,snp,gender){\n  idx <- which(pheno$gender==gender)\n  testpheno <- pheno[idx,]\n  model1 <- glm(pheno[idx,]$affected~snp[idx]+pheno[idx,]$age+\n                  pheno[idx,]$EV3+pheno[idx,]$EV4+pheno[idx,]$EV5+\n                  pheno[idx,]$EV8+pheno[idx,]$EV9,family = binomial())\n  return((summary(model1)$coefficients[2,4]))\n}\n\ngenderinteract <- function(pheno,snptry){\n  model <- glm(pheno$affected~snptry+pheno$age+pheno$EV3+pheno$EV4+pheno$EV5+\n                 pheno$EV8+pheno$EV9+pheno$gender+pheno$gender*snptry+pheno$gender*pheno$EV3+pheno$gender*pheno$EV4+pheno$gender*pheno$EV5+pheno$gender*pheno$EV8+pheno$gender*pheno$EV9+pheno$age*pheno$gender,family=binomial())\n  result <- summary(model)\n  return(result$coefficients[10,4])\n}\n\ngenderinteract.result <- apply(snpdata[,7:27],2,function(x){genderinteract(pheno,x)})\n\npheno$highrisk <- as.numeric(pheno$highrisk)\npheno$highrisk[pheno$highrisk==3] <- NA\npheno$highrisk <- pheno$highrisk-1\nhighriskinteract <- function(pheno,snptry){\n  model <- glm(pheno$affected~snptry+pheno$age+pheno$EV3+pheno$EV4+pheno$EV5+\n                 pheno$EV8+pheno$EV9+pheno$highrisk+pheno$highrisk*snptry+pheno$highrisk*pheno$EV3+pheno$highrisk*pheno$EV4+pheno$highrisk*pheno$EV5+pheno$highrisk*pheno$EV8+pheno$highrisk*pheno$EV9+pheno$age*pheno$highrisk+pheno$gender+pheno$gender*pheno$highrisk,family=binomial())\n  result <- summary(model)\n  return(result$coefficients[11,4])\n}\nhighriskinteract.result <- apply(snpdata[,7:27],2,function(x){highriskinteract(pheno,x)})\n\nidx <- which(pheno$highrisk ==1)\nmodel <- glm(pheno$affected[idx]~pheno$gender[idx]+snptry[idx]+pheno$age[idx]+pheno$EV3[idx]+pheno$EV4[idx]+\n               pheno$EV5[idx]+pheno$EV8[idx]+pheno$EV9[idx],family = binomial())\npheno$stoneyn <- as.numeric(pheno$stoneyn)\npheno$stoneyn[pheno$stoneyn==3] <- NA\npheno$stoneyn <- pheno$stoneyn-1\n\nstoneinteract <- function(pheno,snptry){\n  model <- glm(pheno$affected~snptry+pheno$age+pheno$EV3+pheno$EV4+pheno$EV5+\n                 pheno$EV8+pheno$EV9+pheno$stoneyn+pheno$stoneyn*snptry+pheno$stoneyn*pheno$EV3+pheno$stoneyn*pheno$EV4+pheno$stoneyn*pheno$EV5+pheno$stoneyn*pheno$EV8+pheno$stoneyn*pheno$EV9+pheno$age*pheno$stoneyn+pheno$gender+pheno$gender*pheno$stoneyn,family=binomial())\n  result <- summary(model)\n  return(result$coefficients[11,4])\n}\nstoneinteract.result <- apply(snpdata[,7:27],2,function(x){stoneinteract(pheno,x)})\n\ngenderstrat <- data.frame(snp=colnames(snpdata)[7:26],\n                       Female=apply(snpdata[7:26], 2, function(x){genderlogistic(pheno,x,\"F\")}),\n                       Male=apply(snpdata[7:26], 2, function(x){genderlogistic(pheno,x,\"M\")}))\ncolnames(genderstrat) <- c(\"snp\",\"-log10(p) Female\",\"-log10(P) Male\")\n\n\nwrite.csv(genderstrat,\"../result/gender_\n          _analysis.csv\",quote=F,row.names = F)\n\n\n\ngallstonelogistic<- function(pheno,snp,stoneyn){\n  idx <- which(pheno$stoneyn==stoneyn)\n  testpheno <- pheno[idx,]\n  model1 <- glm(pheno[idx,]$affected~snp[idx]+pheno[idx,]$age+\n                  pheno[idx,]$gender+\n                  pheno[idx,]$EV3+pheno[idx,]$EV4+pheno[idx,]$EV5+\n                  pheno[idx,]$EV8+pheno[idx,]$EV9,family = binomial())\n  return(\n    c((1/exp(summary(model1)$coefficients[2,1])),\n      1/(exp(summary(model1)$coefficients[2,1]+1.96*summary(model1)$coefficients[2,2])),\n      1/(exp(summary(model1)$coefficients[2,1]-1.96*summary(model1)$coefficients[2,2])),\n      summary(model1)$coefficients[2,4])\n    )\n}\n\n\ngallstone <- cbind( apply(snpdata[7:26], 2, function(x){gallstonelogistic(pheno,x,1)}),\n                    apply(snpdata[7:26], 2, function(x){gallstonelogistic(pheno,x,0)}))\n\nwrite.csv(t(gallstone),\"gallstone.csv\",quote=F,row.names = T,col.names=T)\ngallstonestrat <- data.frame(snp=colnames(snpdata)[7:26],\n                       gallstone=apply(snpdata[7:26], 2, function(x){gallstonelogistic(pheno,x,1)}),\n                       nogallstone=apply(snpdata[7:26], 2, function(x){gallstonelogistic(pheno,x,0)}))\n\ncolnames(gallstonestrat) <- c(\"snp\",\"-log10(p) gallstone\",\"-log10(P) nogallstone\")\n\n\nwrite.csv(gallstonestrat,\"../result/gallstone_\n          _analysis.csv\",quote=F,row.names = F)\n\n\n\n\napply(snpdata[7:26], 2, function(x){logistic(pheno,x)})\n\n\n\napply(snpdata[7:26], 2, function(x){risklogistic(pheno,x,0|1)})\n\n\n\nmodel1 <- glm(pheno$affected~snpdata$rs1558376_A+pheno$age+pheno$gender+\n                pheno$EV3+pheno$EV4+pheno$EV5+pheno$EV8+pheno$EV9,family = binomial())\n\n\n\n\n\n\n\n#########caseonly study\n## the code to run on cluster\n\n\n\n\nlibrary(ggplot2)\nlibrary(CGEN)\nlibrary(qqman)\nsetwd(\"../data\")\n##  build snp list for function GxE.scan\nsnp.list <- list()\nsnp.list$format <- \"tped\"\nfile.name <- \"caseonlysnp.tped\"\n\nsnp.list$file <- file.name\n#snp.list$start.vec <- 1\n#snp.list$stop.vec <- 10\nsnp.list$subject.list <- \"caseonlysnp.tfam\"\n##  build phenotype list for function GxE.scan\nf = \"pheno.txt\"\npheno.list <- list(file=f, header=1, delimiter=\"\\t\", id.var=c(\"familyID\",\"ID\"), response.var=\"affected\") \npheno.list$file.type <- 3\npheno.list$main.vars <- ~age+gender+EV3+EV4+EV5+EV8+EV9+stoneyn\npheno.list$int.vars <- ~stoneyn\n##  build op list for funciton GxE.scan\nop<- list()\n\n\nresult <- GxE.scan(snp.list,pheno.list,op)\nresult <- read.table(\"GxE.scan.output.txt\",header=T)\ncaseonly_result2 <- result[,c(1,7,10,11,19,20)]\ncaseonly_result2$oddsratio <- exp(caseonly_result2$CML.SNP.stoneyn.Beta)\ncaseonly_result2$lower_CI <- exp(caseonly_result2$CML.SNP.stoneyn.Beta-1.96*caseonly_result2$CML.SNP.stoneyn.SE)\ncaseonly_result2$upper_CI <- exp(caseonly_result2$CML.SNP.stoneyn.Beta+1.96*caseonly_result2$CML.SNP.stoneyn.SE)\n\n\nwrite.csv(caseonly_result2,\"case-case_analysis.csv\",quote=F,row.names = F)\n\n\n\n####stratifed analysis forest plot\nlibrary(forestplot)\ngall_stone <- read.csv(\"stratified_analysis_gallstone.csv\")\nOR <- with(gall_stone,cbind(OR,OR.1))\n\nlow <- with(gall_stone,cbind(OR_Low,OR_Low.1))\n\nhigh <- with(gall_stone,cbind(OR_high,OR_high.1))\nrow_names <- as.list(c(expression(paste(\"Cluster1\")),rep(NA,11),expression(paste(\"Cluster2\")),rep(NA,8)))\nrow_names <- list(categories=row_names,snp=as.list(as.character(gall_stone$snp)))\npng(filename = \"forest_plot.png\",res=600,units=\"in\",width=6,height = 6)\nforestplot(row_names,OR,low,high,new_page = TRUE,boxsize = 0.2,\n           xticks = c(0.5,1,1.5,2,2.5,3,3.5,4,4.5,5),\n           hrzl_lines = gpar(lwd=15),\n           clip=c(0,5),\n           zero=c(1,1),\n           title=\"\n           Stratified analysis for gall stone\",\n           col=fpColors(box=c(\"royalblue\",\"gold\"),\n                        line=c(\"darkblue\",\"orange\")), \n           legend=c(\"With gallstone\",\"Without gallstone\"),\n           xlab=\"Odds Ratio\",\n           legend_args=fpLegend(pos=list(\"topright\"),\n                                title=\"Group\",\n                                r=unit(.1,\"snpc\"),\n                                gp=gpar(col=\"#CCCCCC\",lwd=1.5)\n                              ))\ndev.off()\n\n\nforestplot(row_names,OR,low,high,new_page = TRUE,boxsize = 0.2,\n           xticks = c(0.5,1,1.5,2,2.5,3,3.5,4,4.5,5),\n           hrzl_lines = gpar(lwd=15),\n           clip=c(0,5),\n           zero=c(1,1),\n           title=\"\n           Stratified analysis for gall stone\",\n           col=fpColors(box=c(\"royalblue\",\"gold\"),\n                        line=c(\"darkblue\",\"orange\")), \n           legend=c(\"With gallstone\",\"Without gallstone\"),\n           xlab=\"Odds Ratio\",\n           legend_args=fpLegend(pos=list(\"right\"),\n                                title=\"Group\",\n                                r=unit(.1,\"snpc\"),\n                                gp=gpar(col=\"#CCCCCC\",lwd=1.4)\n           ))\n### \nanalysis and conditional analysis based on gallstone\nsetwd(\"../data\")\npheno <- read.table(\"pheno_ev\",header=T,sep=\"\\t\")\n\npheno.new <- read.csv(\"pheno.csv\")\npheno$X <- NULL\npheno$affected_status.1 <- NULL\npheno$affected <- 0\npheno$affected[pheno$affected_status==\"Case\"] <- 1\npheno$familyID <- fam$V1\nidx <- pheno.new$id %in% fam$V2\npheno.new.c <- pheno.new[idx,]\npheno.new.c <- pheno.new.c[match(fam$V2,pheno.new.c$id),]\npheno$highrisk <- pheno.new.c$birth_place_in_high_risk_area\npheno$stoneyn <- pheno.new.c$stone_yn\n\ntopsnplist <- read.table(\"topsnplist\",header=F)\ncolnames(topsnplist) <- \"snp\"\nsnpdata <- read.table(\"topsnp.raw\",header=T)\npheno_new <- read.table(\"pheno_SNPtest.txt\",header=T)\ncovar <- pheno_new[,2:11]\ncovar <- pheno_new[2:11]\ntopsnp <- snpdata[,12]\ntopsnp.new <- topsnp\ntopsnp.new[topsnp==0] <-2\ntopsnp.new[topsnp==2] <- 0\ntopsnp <- topsnp.new\nsnpdata <- snpdata[,-12]\nsnpdata <- snpdata[,-11]\nx <- snpdata[,8]\ncondition.\n<- function(x,i){\n  idx <- which(pheno$stoneyn==i)\n  x.new <- x\n  x.new[x==2] <- 0\n  x.new[x==0] <- 2\n  x <- x.new\n  model <- glm(pheno_new$affected_status_Case[idx]~x[idx]+covar$agegroup_18_29[idx] +covar$agegroup_30_39[idx]+\n                 covar$agegroup_40_49[idx]+covar$agegroup_60[idx]+covar$gender_F[idx]+covar$EV3[idx]+\n                 covar$EV4[idx]+covar$EV5[idx]+covar$EV8[idx]+covar$EV9[idx]+topsnp[idx],family=binomial)\n  result <- summary(model)\n  places=2\n  log.or <- result$coefficients[2,1]\n  sd <- result$coefficients[2,2]\n  log.or.low <- -1.96*sd+log.or\n  log.or.high <- 1.96*sd+log.or\n  p <- result$coefficients[2,4]\n  log.or.top <- result$coefficients[13,1]\n  sd.top <- result$coefficients[13,2]\n  log.or.low.top <- -1.96*sd.top+log.or.top\n  log.or.high.top <- 1.96*sd.top+log.or.top\n  p.top <- result$coefficients[13,4]\n  r2 <- round(cor(x[idx],topsnp[idx],use=\"complete.obs\")^2,3)\n  temp <- cbind(x[idx],topsnp[idx],pheno_new$affected_status_Case[idx])\n  temp <- temp[complete.cases(temp),]\n  control.case <- table(temp[,3])\n  or <- round(exp(log.or),places)\n  or.low <- round(exp(log.or.low),places)\n  or.high <- round(exp(log.or.high),places)\n  or.top <- round(exp(log.or.top),places)\n  or.low.top <- round(exp(log.or.low.top),places)\n  or.high.top <- round(exp(log.or.high.top),places) \n  return(\n    c(control.case[1],control.case[2],r2,\n      paste0(or,\"(\",or.low,\"-\",\n             or.high,\")\"),\n      p,\n      paste0(or.top,\"(\",or.low.top,\n             \"-\",or.high.top,\")\"),\n      p.top\n    )\n  )\n}\ncondition.nostone <- apply(snpdata[,7:25],2,function(x)condition.\n                           (x,0))\n\n\nnames <- colnames(condition.nostone)\nnames <- gsub(\"_.*\",\"\",names)\ncondition.nostone <- t(condition.nostone)\ncolnames(condition.nostone) <- c(\"control\",\"cases\",\"R2\",\"OR\",\"P-value\",\"P-value for top\",\"OR for top\")\ncondition.nostone <- as.data.frame(condition.nostone)\ncondition.nostone$snp <- names\ncondition.nostone <- merge(topsnplist,condition.nostone,by=\"snp\",all.x = T,all.y = T\n                          ,sort = F)\nwrite.csv(condition.nostone,\"condition.nostone.csv\",col.names =T,quote=F,row.names=F)\n\n\ncondition.\n.for.plot <- function(x,i){\n  idx <- which(pheno$stoneyn==i)\n  x.new <- x\n  x.new[x==2] <- 0\n  x.new[x==0] <- 2\n  x <- x.new\n  model <- glm(pheno_new$affected_status_Case[idx]~x[idx]+covar$agegroup_18_29[idx] +covar$agegroup_30_39[idx]+\n                 covar$agegroup_40_49[idx]+covar$agegroup_60[idx]+covar$gender_F[idx]+covar$EV3[idx]+\n                 covar$EV4[idx]+covar$EV5[idx]+covar$EV8[idx]+covar$EV9[idx]+topsnp[idx],family=binomial)\n  result <- summary(model)\n  places=2\n  log.or <- result$coefficients[2,1]\n  sd <- result$coefficients[2,2]\n  log.or.low <- -1.96*sd+log.or\n  log.or.high <- 1.96*sd+log.or\n  p <- result$coefficients[2,4]\n  log.or.top <- result$coefficients[13,1]\n  sd.top <- result$coefficients[13,2]\n  log.or.low.top <- -1.96*sd.top+log.or.top\n  log.or.high.top <- 1.96*sd.top+log.or.top\n  p.top <- result$coefficients[13,4]\n  r2 <- round(cor(x[idx],topsnp[idx],use=\"complete.obs\")^2,3)\n  temp <- cbind(x[idx],topsnp[idx],pheno_new$affected_status_Case[idx])\n  temp <- temp[complete.cases(temp),]\n  control.case <- table(temp[,3])\n  or <- round(exp(log.or),places)\n  or.low <- round(exp(log.or.low),places)\n  or.high <- round(exp(log.or.high),places)\n  or.top <- round(exp(log.or.top),places)\n  or.low.top <- round(exp(log.or.low.top),places)\n  or.high.top <- round(exp(log.or.high.top),places) \n  return(\n   c(or,or.low,or.high)\n    )\n  \n}\n\ncondition.nostone <- apply(snpdata[,7:25],2,function(x)condition.\n                           .for.plot(x,0))\n\n\nnames <- colnames(condition.nostone)\nnames <- gsub(\"_.*\",\"\",names)\ncondition.nostone <- t(condition.nostone)\ncolnames(condition.nostone) <- c(\"OR\",\"OR_low\",\"OR_high\")\ncondition.nostone <- as.data.frame(condition.nostone)\ncondition.nostone$snp <- names\ncondition.nostone <- merge(topsnplist,condition.nostone,by=\"snp\",all.x = T,all.y = T\n                           ,sort = F)\ncondition.nostone <- condition.nostone[1:19,]\ncondition.nostone$Set <- c(rep(1,10),rep(2,9))\nwrite.csv(condition.nostone,\"condition.nostone.plot.csv\",col.names =T,quote=F,row.names=F)\nlibrary(forestplot)\ngall_stone <- read.csv(\"condition.nostone.plot.csv\")\nOR <- gall_stone$OR\n\nlow <- gall_stone$OR_low\n\nhigh <- gall_stone$OR_high\nrow_names <- as.list(c(\"Set1\",rep(NA,9),\"Set2\",rep(NA,8)))\nrow_names <- list(categories=row_names,snp=as.list(as.character(gall_stone$snp)))\npng(filename = \"forest_plot.nostone.conditional.png\",res=600,units=\"in\",width=6,height = 6)\nforestplot(row_names,OR,low,high,new_page = TRUE,boxsize = 0.2,\n           xticks = c(0.5,1,1.5,2,2.5,3,3.5,4,4.5,5),\n           hrzl_lines = gpar(lwd=15),\n           clip=c(0,5),\n           zero=c(1,1),\n           title=\"conditional analysis reference to rs1558376 in no stone group\",\n           xlab=\"Odds Ratio\",\n           )\ndev.off()\n\n\ndata <- read.csv(\"data_region.csv\")\nfam <- read.table(\"GBC_final.fam\")\ndata_all <- merge(data,fam,by.x =\"id\",by.y =\"V2\",all=T)\n\nidx_central <- which(data_all$Birth.state.code==\"Central\")\ncentral <- data_all[idx_central,c(6,1)]\nwrite.table(central,\"./pca_freq/central_id.txt\",row.names = F,col.names = F,quote = F)\n\nidx_north <- which(data_all$Birth.state.code==\"North\")\nnorth <- data_all[idx_north,c(6,1)]\nwrite.table(north,\"./pca_freq/north_id.txt\",row.names = F,col.names = F,quote = F)\n\nidx_north_east <- which(data_all$Birth.state.code==\"North East\")\nnorth_east <- data_all[idx_north_east,c(6,1)]\nwrite.table(north_east,\"./pca_freq/north_east_id.txt\",row.names = F,col.names = F,quote = F)\n\nidx_south <- which(data_all$Birth.state.code==\"South\")\nsouth <- data_all[idx_south,c(6,1)]\nwrite.table(south,\"./pca_freq/south_id.txt\",row.names = F,col.names = F,quote = F)\n\nidx_west <- which(data_all$Birth.state.code==\"West\")\nwest <- data_all[idx_west,c(6,1)]\nwrite.table(west,\"./pca_freq/west_id.txt\",row.names = F,col.names = F,quote = F)\n\nidx_west_bengal <- which(data_all$Birth.state.code==\"West Bengal\")\nwest_bengal <- data_all[idx_west_bengal,c(6,1)]\nwrite.table(west_bengal,\"./pca_freq/west_bengal_id.txt\",row.names = F,col.names = F,quote = F)",
    "created" : 1484357916042.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2549617170",
    "id" : "E8971CFF",
    "lastKnownWriteTime" : 1495077964,
    "last_content_update" : 1495077964623,
    "path" : "~/Dropbox/project/Nilanjan/Gallballadar_Cancer/code/Gallbladder_Cancer_Oct21.R",
    "project_path" : "Gallbladder_Cancer_Oct21.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}